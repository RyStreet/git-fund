[{"D:\\git-fund\\client\\src\\index.js":"1","D:\\git-fund\\client\\src\\App.js":"2","D:\\git-fund\\client\\src\\pages\\SignupForm.js":"3","D:\\git-fund\\client\\src\\pages\\CreateProject.js":"4","D:\\git-fund\\client\\src\\pages\\LoginForm.js":"5","D:\\git-fund\\client\\src\\components\\Navbar.js":"6","D:\\git-fund\\client\\src\\pages\\Homepage.js":"7","D:\\git-fund\\client\\src\\components\\ProjectCards.js":"8","D:\\git-fund\\client\\src\\pages\\Profile.js":"9","D:\\git-fund\\client\\src\\components\\Footer.js":"10","D:\\git-fund\\client\\src\\pages\\SingleProject.js":"11","D:\\git-fund\\client\\src\\components\\AboutUs.js":"12","D:\\git-fund\\client\\src\\components\\Donations.js":"13","D:\\git-fund\\client\\src\\components\\Collaborators.js":"14","D:\\git-fund\\client\\src\\components\\Collaborate.js":"15","D:\\git-fund\\client\\src\\components\\Donate.js":"16","D:\\git-fund\\client\\src\\utils\\auth.js":"17","D:\\git-fund\\client\\src\\pages\\DummyData.js":"18","D:\\git-fund\\client\\src\\assets\\logo.js":"19","D:\\git-fund\\client\\src\\utils\\mutations.js":"20","D:\\git-fund\\client\\src\\utils\\queries.js":"21"},{"size":270,"mtime":1678237682855,"results":"22","hashOfConfig":"23"},{"size":2024,"mtime":1678246136970,"results":"24","hashOfConfig":"23"},{"size":2810,"mtime":1678315224523,"results":"25","hashOfConfig":"23"},{"size":3665,"mtime":1678307175672,"results":"26","hashOfConfig":"23"},{"size":2638,"mtime":1678315158335,"results":"27","hashOfConfig":"23"},{"size":3091,"mtime":1678317889535,"results":"28","hashOfConfig":"23"},{"size":1462,"mtime":1678307175673,"results":"29","hashOfConfig":"23"},{"size":2365,"mtime":1678313390488,"results":"30","hashOfConfig":"23"},{"size":3070,"mtime":1678315122902,"results":"31","hashOfConfig":"23"},{"size":1892,"mtime":1678307175658,"results":"32","hashOfConfig":"23"},{"size":2306,"mtime":1678316530981,"results":"33","hashOfConfig":"23"},{"size":657,"mtime":1678307175657,"results":"34","hashOfConfig":"23"},{"size":560,"mtime":1678237682837,"results":"35","hashOfConfig":"23"},{"size":723,"mtime":1678313087041,"results":"36","hashOfConfig":"23"},{"size":3172,"mtime":1678246136971,"results":"37","hashOfConfig":"23"},{"size":2360,"mtime":1678246136972,"results":"38","hashOfConfig":"23"},{"size":720,"mtime":1678237682876,"results":"39","hashOfConfig":"23"},{"size":86,"mtime":1678307175673,"results":"40","hashOfConfig":"23"},{"size":40173,"mtime":1678237682775,"results":"41","hashOfConfig":"23"},{"size":2581,"mtime":1678307175675,"results":"42","hashOfConfig":"23"},{"size":1606,"mtime":1678307175676,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"9avf6r",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"D:\\git-fund\\client\\src\\index.js",[],["98","99"],"D:\\git-fund\\client\\src\\App.js",["100"],"import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport ProjectCards from './components/ProjectCards';\nimport Homepage from './pages/Homepage';\nimport SignupForm from './pages/SignupForm';\nimport LoginForm from './pages/LoginForm';\nimport CreateProject from './pages/CreateProject';\nimport Profile from './pages/Profile';\nimport SingleProject from './pages/SingleProject';\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  uri: \"graphql\",\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return(\n  <ApolloProvider client={client}>\n    <Router>\n      <>\n        <Navbar />\n        <Routes>\n          <Route\n            path='/'\n            element={<Homepage />}\n          />\n          <Route\n            path='/profile'\n            element={<Profile />}\n          />\n          <Route\n            path='/login'\n            element={<LoginForm />}\n          />\n          <Route \n            path='/signup'\n            element={<SignupForm />}\n          />\n          <Route \n            path='/create-project'\n            element={<CreateProject />}\n          />\n          <Route \n            path='/projects/:projectId'\n            element={<SingleProject />}\n          />\n          <Route \n            path='/profiles/:username'\n            element={<Profile />}\n          />\n        </Routes>\n        <Footer/>\n      </>\n    </Router>\n  </ApolloProvider>\n)};\n\nexport default App;","D:\\git-fund\\client\\src\\pages\\SignupForm.js",["101"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\nimport Footer from '../components/Footer';\n\nconst Signup = () => {\n  const [formState, setFormState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await addUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div>\n\n    <center>\n    <main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"card login-container\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit} className=\"login-form\">\n                <input\n                  className=\"\"\n                  placeholder=\"Create a username\"\n                  name=\"username\"\n                  type=\"text\"\n                  value={formState.name}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"\"\n                  placeholder=\"Enter your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block login-btn\"\n                  type=\"submit\"\n                  \n                >\n                  Submit\n                </button>\n              </form>\n            )}\n            <Link to={'/login'} className=\"textDecNone\">\n              <h5>Login instead</h5>\n            </Link>\n\n            {error && (\n              <div>\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n    </center>\n\n    </div>\n  );\n};\n\nexport default Signup;","D:\\git-fund\\client\\src\\pages\\CreateProject.js",["102","103"],"import React, { useState } from \"react\";\nimport { ApolloError, useMutation } from \"@apollo/client\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { ADD_PROJECT } from \"../utils/mutations\";\nimport { QUERY_PROJECTS, QUERY_ME } from \"../utils/queries\";\n\nimport Auth from \"../utils/auth\";\n\n\n\nfunction CreateProject() {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [fundingGoal, setFundingGoal] = useState('');\n  const [repo, setRepo] = useState('');\n  const navigate = useNavigate()\n\n  const [addProject, { error }] = useMutation(ADD_PROJECT, {\n    update(cache, { data: { addProject } }) {\n      try {\n        const { projects } = cache.readQuery({ query: QUERY_PROJECTS });\n\n        cache.writeQuery({\n          query: QUERY_PROJECTS,\n          data: { projects: [addProject, ...projects] },\n        });\n      } catch (e) {\n        console.error(e)\n      }\n\n      // const { me } = cache.readQuery({ query: QUERY_ME });\n      // cache.writeQuery({\n      //   query: QUERY_ME,\n      //   data: { me: { ...me, projects: [...me.projects, addProject] } },\n      // });\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const error = ApolloError\n    console.log(error instanceof Error)\n    console.log('handleFormSubmit')\n    try {\n      const { data } = await addProject({\n        variables: {\n          title,\n          description,\n          fundingGoal,\n          repo,\n          creator: Auth.getProfile().data.username,\n        },\n      });\n\n      setTitle('');\n      setDescription('');\n      setFundingGoal('');\n      setRepo('');\n\n      navigate(\"/profile\", {replace: true})\n    } catch (err) {\n      console.error(err);\n    } \n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'title') {\n      setTitle(value);\n    }\n    if (name === 'description') {\n      setDescription(value);\n    }\n    if (name === 'fundingGoal') {\n      setFundingGoal(parseInt(value));\n    }\n    if (name === 'repo') {\n      setRepo(value);\n    }\n  };\n\n  return (\n    <div >\n      {Auth.loggedIn() ? (\n      <div className=\"newProject\">\n        <h2>Post New Project</h2>\n        <form onSubmit={handleFormSubmit} className=\"newProject_form\">\n          \n          <div>\n            <textarea \n              name=\"title\" value={title} id=\"title\" placeholder=\"What is your project title?\"\n              className=\"textarea\" onChange={handleChange}\n            />\n          </div>\n        \n          <div>\n            <textarea \n              name=\"description\" value={description} id=\"description\" placeholder=\"What is your project description?\"\n              className=\"textarea\" onChange={handleChange}\n              />\n          </div>  \n\n          <div>\n            <textarea \n              name=\"repo\" value={repo} id=\"repo\" placeholder=\"Provide project repository's URL\"\n              className=\"textarea\" onChange={handleChange}\n              />\n          </div>  \n\n          <div className=\"fundingGoal\">\n            <label>How much funding is needed?</label>\n            <input \n              name=\"fundingGoal\" value={fundingGoal} id=\"fundingGoal\" type=\"number\" \n              className=\"\" onChange={handleChange}\n            />\n          </div>   \n\n          <div>\n            <button className=\"button\" type=\"submit\">Post Project</button>\n          </div>\n\n          {error && (\n            <div>\n              {error.message}\n            </div>\n          )}\n        </form>\n      </div>\n      ) : (\n        <h3>Login or sign up to create a new project</h3>\n      )}\n    </div>\n  )\n};\n\n\nexport default CreateProject;","D:\\git-fund\\client\\src\\pages\\LoginForm.js",["104"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\nimport Footer from '../components/Footer';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <div>\n\n<center>\n<main className=\"flex-row justify-center mb-4\">\n      <div className=\"col-12 col-lg-10\">\n        <div className=\"login-container\">\n          <h4 className=\"card-header bg-dark text-light p-2\">Login</h4>\n          <div className=\"card-body\">\n            {data ? (\n              <p>\n                Success! You may now head{' '}\n                <Link to=\"/\">back to the homepage.</Link>\n              </p>\n            ) : (\n              <form onSubmit={handleFormSubmit} className=\"login-form\">\n                <input\n                  className=\"\"\n                  placeholder=\"Enter your email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={formState.email}\n                  onChange={handleChange}\n                />\n                <input\n                  className=\"\"\n                  placeholder=\"******\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={formState.password}\n                  onChange={handleChange}\n                />\n                <button\n                  className=\"btn btn-block login-btn\"\n                  type=\"submit\"\n                >\n                  Submit\n                </button>\n              </form>\n            )}\n            <Link to={'/signup'} className=\"textDecNone\">\n              <h5>Sign up instead</h5>\n            </Link>\n\n            {error && (\n              <div>\n                {error.message}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n    \n    </center>\n\n    </div>\n  );\n};\n\nexport default Login;\n","D:\\git-fund\\client\\src\\components\\Navbar.js",["105","106","107","108","109","110","111","112"],"D:\\git-fund\\client\\src\\pages\\Homepage.js",["113","114","115","116","117","118"],"import { useQuery } from '@apollo/client';\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { data } from './DummyData';\n// import { useQuery } from '@apollo/client';\nimport background from '../assets/background-mobile.jpg'\nimport AboutUs from '../components/AboutUs';\nimport ProjectCards from '../components/ProjectCards';\n\nimport Auth from '../utils/auth';\nimport { QUERY_PROJECTS } from '../utils/queries';\nimport Footer from '../components/Footer';\n\n\nfunction Homepage() {\n  const {loading, data} = useQuery(QUERY_PROJECTS)\n  const projects = data?.projects || []\n\n  return (\n    <div className='HomeMainContainer'>\n      <h3>Help fund or collaborate on projects!</h3>\n      \n      <div>\n        {Auth.loggedIn() ? (\n          <>\n            <Link to='/create-project'>\n              <button style={{backgroundColor:'#FE9F00'}} className='button'>+ New Project</button>\n            </Link>\n          </>\n        ) : (\n          <>\n            <Link to={'/login'}>\n              <button className='button'>+ New Project</button>\n            </Link>\n          </>\n         )}\n        \n      </div>\n      <div>\n        {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <ProjectCards\n              projects={projects}\n            />\n          )}\n      </div>\n\n      {/* <img className='background' src={background}></img>\n      <AboutUs/> */}\n    </div>\n  )\n};\n\nexport default Homepage;","D:\\git-fund\\client\\src\\components\\ProjectCards.js",["119","120","121"],"import React from \"react\"\nimport { Link } from 'react-router-dom'\nimport Donate from '../components/Donate'\nimport Donations from \"./Donations\"\n\nimport { Progress } from 'semantic-ui-react'\n\nconst ProjectCards = ({projects}) => { \n    if(!projects?.length){ \n        return <h4>No Projects Yet</h4>;\n    }\n    return(\n        <div id=\"projectCard\">\n            {projects && \n                projects.map((project) => (\n                    \n                    <div key={project._id} className=\"MainTile my-4\">  \n                        <div id=\"projectCardHeader\">\n                            <h3 id=\"projectCardTitle\">{project.title}</h3>\n                            <h4>\n                              By: <Link className=\"textDecNone\" to={`/profiles/${project.creator}`}>{project.creator}</Link>\n                            </h4>\n                            \n                            <p id=\"projectCardDescription\">{project.description}</p>\n                            {/* <p id=\"projectCardCategory\">{project.category}</p> */}\n                            {/* <ul id=\"projectCardLanguages\">{project.languages}</ul> */}\n                        </div>\n\n                        <br/>\n\n                        <div id=\"projectCardFunding\" className=\"btn-fund-container\">\n                            <h6 id=\"projectCardFunding\"> Funding Goal: ${project.fundingGoal} </h6>\n                            {/* <div><Progress percent={\"10\"} inverted progress success/></div> */}\n                        </div>\n\n                        <Link to={`/projects/${project._id}`} className=\"projectDetails\">\n                          View project details \n                        </Link>\n                    </div>\n            ))} \n        </div>\n\n\n    //----------------- PUT THESE STYLES IN ABOVE AFTER CreateProject.js WORKS ---------------- //\n        // <div className=\"MainTile\">\n            // <h4>Project : </h4>\n            // <p>\n            //   Description : \n            // </p>\n            // <div className='btn-fund-container'>\n            // <p>Funding -</p>\n            // <button className='button' >Donate</button>\n            // </div>\n            // <Progress percent={\"10\"} inverted progress success/>\n        // </div>\n    // --------------------------------------------------------------------------------------- //\n    )\n};\n\nexport default ProjectCards;","D:\\git-fund\\client\\src\\pages\\Profile.js",["122","123","124","125"],"import React,  {useState } from \"react\";\nimport { Link, Navigate, useNavigate, useParams } from \"react-router-dom\";\nimport Auth from '../utils/auth';\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_ME, QUERY_USER } from \"../utils/queries\"\nimport ProjectCards from \"../components/ProjectCards\";\nimport { useMutation } from \"@apollo/client\";\nimport { EDIT_BIO } from '../utils/mutations'\n\nimport EdiText from 'react-editext';\n\n\nfunction Profile() {  \n  const navigate = useNavigate()\n\n  // For bio \n  const [bio, setBio] = useState('');\n  const [editBio, {error}] = useMutation(EDIT_BIO);\n\n  const { username: userParam } = useParams();\n  const {loading, data} = useQuery(userParam ? QUERY_USER : QUERY_ME, {\n    variables: { username: userParam }\n  });\n\n  const user = data?.me || data?.user || []\n  \n  const projects = user.projects\n  const collabProjects = user.collabProjects\n\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n    return <Navigate to=\"/profile\" />\n  }\n  if (!Auth.loggedIn()) {\n    return (\n      <Link to={'/login'} className=\"textDecNone\">\n        <h1>Login or sign up to view user profiles</h1>\n      </Link>\n    )\n  }\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  // For saving and editing bio\n  const handleSaveBio = async (bio) => {\n    console.log('New Bio Saved:', bio);\n    try {\n      const {data} = await editBio({\n        variables: {\n          userId: user._id,\n          bio\n        }\n      })\n      setBio(\"\");\n     \n      navigate(\"/profile\", {replace: true})\n    } catch (err) {\n      console.error(err)\n    }\n  };\n\n  const handleChange = (event) => {\n    let { name, value} = event.target;\n\n    if(name= \"bio\") {\n      setBio(value)\n    }\n  }\n\n  return (\n    <div className=\"profileMargins\">\n      <div>\n        <h2>{userParam ? `Now Viewing ${user.username}'s` : `Your`} Profile</h2>\n        <h5>Email: {user.email}</h5>\n        {/* <h5>GitHub:</h5> */}\n        {/* <h5>Bio: {user.bio}</h5>\n        {!userParam ? (\n          <EdiText name=\"bio\" type='text' value={bio} onSave={handleSaveBio} onChange={handleChange}/>\n        ): (\n        <></>\n        )}      */}\n        \n        {!userParam ? (\n          <div>\n            <h5 style={{maxWidth:\"70%\"}}>Bio: {user.bio}</h5>\n            <EdiText \n              name=\"bio\" type='textarea' value={bio} \n              editButtonContent=\"Edit\"\n              inputProps={{ placeholder:\"Edit your bio here\", style: {maxWidth:\"70%\"}, rows: 3 }}\n              onSave={handleSaveBio} onChange={handleChange}\n            />\n          </div>\n        ) : (\n          <h5 style={{maxWidth:\"70%\"}}>Bio: {user.bio}</h5>\n        )}     \n\n      <br/>\n\n        <div>\n          <h3>{userParam ? `${user.username}'s` : `Your`} Projects:</h3>\n          <ProjectCards\n            projects={projects}\n          />\n        </div>\n      \n      <br/>\n\n        <div>\n          <h3>Collaborated Projects:</h3>\n          <ProjectCards\n            projects={collabProjects}\n          />\n        </div>\n\n      </div>       \n    </div>\n  )\n};\n\nexport default Profile;","D:\\git-fund\\client\\src\\components\\Footer.js",[],"D:\\git-fund\\client\\src\\pages\\SingleProject.js",["126","127"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport Donate from '../components/Donate'\nimport Collaborate from '../components/Collaborate'\nimport Collaborators from '../components/Collaborators';\nimport Donations from '../components/Donations';\n\nimport { QUERY_SINGLE_PROJECT } from '../utils/queries';\n\nimport Auth from '../utils/auth';\n\nimport { Progress } from 'semantic-ui-react';\nimport { Dummydata } from './DummyData';\n\n\nfunction SingleProject() {\n  const { projectId } = useParams();\n  const { loading, data } = useQuery(QUERY_SINGLE_PROJECT, {\n    variables: { projectId: projectId },\n  });\n\n  const project = data?.project || {};\n  console.log(project)\n  if (!Auth.loggedIn()) {\n    return (\n      <Link to={'/login'} className=\"textDecNone\">\n        <h1>Login or sign up to interact with projects!</h1>\n      </Link>\n    )\n  }\n  if (loading) {\n    return <div>Loading...</div>\n  }\n\n  // For total donations\n  let donations = project.fundingEarned\n  console.log(donations)\n\n  let total = 0\n\n  for (let i = 0; i < donations.length; i++){\n   const loopDonations = donations[i].amount\n   console.log(\"LOOP\", loopDonations)   \n\n   total += loopDonations\n  }\n  console.log(total)\n  \n\n  return (\n    <>\n      <div className='project'>\n        <div className='project-section1'>\n          <h1>{project.title}</h1>\n          <h5>By: {project.creator}</h5>\n          <h5>{project.description}</h5>\n          <h5>Project Repository: {project.repo}</h5>\n        </div>  \n\n        <br/>\n\n        <div className='project-section3'>          \n          <h4>Funding Total: ${total}</h4>\n          <h4>Funding Goal: ${project.fundingGoal}</h4>\n          {/* <Progress percent=\"80\" inverted progress success/> */}\n          <Donate projectId={project._id} className='button donate-btn' />\n        </div>\n\n        <div className='project-section2'>\n          <h4>Collaborators:</h4>\n          <h5><Collaborators collaborators={project.collaborators}/></h5>\n          <Collaborate projectId={project._id} className='button' />\n        </div>\n      </div>\n\n      <div className='list'> \n        <Donations fundingEarned={project.fundingEarned}/>\n      </div>\n    </>\n  )\n};\n\nexport default SingleProject;","D:\\git-fund\\client\\src\\components\\AboutUs.js",[],"D:\\git-fund\\client\\src\\components\\Donations.js",[],"D:\\git-fund\\client\\src\\components\\Collaborators.js",[],"D:\\git-fund\\client\\src\\components\\Collaborate.js",["128","129","130","131","132"],"import React, { useState } from 'react';\nimport { useMutation, useQuery } from '@apollo/client';\n\nimport { ADD_COLLABORATOR } from '../utils/mutations';\nimport {QUERY_SINGLE_PROJECT} from \"../utils/queries\"\n\nimport { Button, Modal, Form } from 'semantic-ui-react';\n\nimport Auth from '../utils/auth';\nimport { useParams } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\n\nfunction modalReducer(state, action) {\n  switch (action.type) {\n    case 'close':\n      return { open: false }\n    case 'open':\n      return { open: true, size: action.size }\n    default:\n      throw new Error('Unsupported action...')\n  }\n}\n\nconst CollaborateModal = ({ projectId }) => {\n\n const  navigate = useNavigate() \n\n  const [state, dispatch] = React.useReducer(modalReducer, {\n    open: false,\n    size: undefined,\n  })\n  const { open, size } = state\n\n  \n\n  const [collabNotes, setCollabNotes] = useState('');\n\n  \n\n  const [addCollaborator, { error }] = useMutation(ADD_COLLABORATOR, {\n\n    update(cache, {data: {addCollaborator}}){\n      try {\n        const {collaboratorInfo} = cache.readQuery({query: QUERY_SINGLE_PROJECT});\n        \n        cache.writeQuery({\n          query: QUERY_SINGLE_PROJECT,\n          data: {collaboratorInfo: [addCollaborator, ...collaboratorInfo]}\n        })\n      } catch (err){\n        console.log(error)\n      }\n    }\n\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n   \n\n    console.log('adding collaborator')\n    try {\n      console.log({\n        projectId,\n        collabNotes,\n      })\n      const { data } = await addCollaborator({\n        variables: {\n          projectId,\n          collabNotes,\n        }\n      });\n\n      setCollabNotes('');\n\n      \n      \n\n      // navigate(0)\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    // event.preventDefault();\n\n    const { name, value } = event.target;\n\n    if (name === 'collabNotes') {\n      setCollabNotes(value);\n    }\n  };\n\n  return (\n    <>\n      <Button className=\"ui button\" onClick={() => dispatch({ type: 'open', size: 'tiny' })}>\n        Collaborate\n      </Button>\n\n      {/* { event => handleFormSubmit(event)} */}\n      <Modal\n        as={Form} onSubmit={handleFormSubmit}\n        size={size}\n        open={open}\n        onClose={() => dispatch({ type: 'close' })}\n      >\n        <Modal.Header>Collaborate on this project</Modal.Header>\n        \n        <Modal.Content>\n            <textarea\n                name='collabNotes' id='collabNotes' value={collabNotes} type='text'\n                label='What will you contribute to this project?' required\n                placeholder='Include what languages and technologies you will use'\n                className='' onChange={handleChange}\n            />\n        </Modal.Content>\n\n        <Modal.Actions>\n          <Button negative onClick={() => dispatch({ type: 'close' })}>\n            Cancel\n          </Button>\n          <Button type='submit' >{/* positive onClick={() => dispatch({ type: 'close' })} */}\n            Send\n          </Button>\n        </Modal.Actions>\n      </Modal>      \n    </>\n  )\n}\n\nexport default CollaborateModal;","D:\\git-fund\\client\\src\\components\\Donate.js",["133","134","135","136","137","138"],"import { useMutation } from '@apollo/client'\nimport React, { useState } from 'react'\nimport { Button, Form, Icon, Modal } from 'semantic-ui-react'\nimport { ADD_DONATION } from '../utils/mutations'\nimport Auth from '../utils/auth'\nimport { useNavigate } from \"react-router-dom\";\n\nfunction modalReducer(state, action) {\n  switch (action.type) {\n    case 'close':\n      return { open: false }\n    case 'open':\n      return { open: true, size: action.size }\n    default:\n      throw new Error('Unsupported action...')\n  }\n}\n\nconst DonateModal = ({projectId}) => {\n  const [state, dispatch] = React.useReducer(modalReducer, {\n    open: false,\n    size: undefined,\n  })\n  const { open, size } = state\n\n  const navigate = useNavigate()\n  //////////// FOR DISPLAYING FUNDINGEARNED UNTIL WE FIGURE OUT STRIPE\n  const [amount, setAmount] = useState(\"\");\n\n  const [addDonation, {error}] = useMutation(ADD_DONATION)\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    console.log(\"adding donation\")\n    try{\n      const {data} = await addDonation({\n        variables:{\n          projectId,\n          amount,\n          donaterName: Auth.getProfile().data.username,\n        }\n      });\n      setAmount(\"\")\n\n      // navigate(0)\n    } catch (err){\n      console.error(err)\n    }\n  }\n\n  const handleChange = (event) => {\n    let {name, value} = event.target;\n\n    if(name = \"amount\") {\n      setAmount(parseInt(value))\n    }\n  }\n\n  return (\n    <>\n      <Button className=\"ui button\" onClick={() => dispatch({ type: 'open', size: 'tiny' })}>\n        Donate\n      </Button>\n\n      <Modal\n        as={Form} onSubmit={handleFormSubmit}\n        size={size}\n        open={open}\n        onClose={() => dispatch({ type: 'close' })}\n      >\n        <Modal.Header>Donate to this project</Modal.Header>\n        <Modal.Content>\n         <h6>Donation amount ($):</h6>\n            <input \n            value={amount} \n            name='amount' \n            type='number'\n            onChange={handleChange}>  \n            </input>\n                 \n        </Modal.Content>\n\n        <Modal.Actions>\n          <Button negative onClick={() => dispatch({ type: 'close' })}>\n            Cancel\n          </Button>\n          <Button type='submit'>\n            Send\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    </>\n  )\n}\n\nexport default DonateModal;","D:\\git-fund\\client\\src\\utils\\auth.js",["139"],"import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    const decoded = decode(token);\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","D:\\git-fund\\client\\src\\pages\\DummyData.js",[],"D:\\git-fund\\client\\src\\assets\\logo.js",[],"D:\\git-fund\\client\\src\\utils\\mutations.js",[],"D:\\git-fund\\client\\src\\utils\\queries.js",[],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":12,"column":8,"nodeType":"146","messageId":"147","endLine":12,"endColumn":20},{"ruleId":"144","severity":1,"message":"148","line":8,"column":8,"nodeType":"146","messageId":"147","endLine":8,"endColumn":14},{"ruleId":"144","severity":1,"message":"149","line":6,"column":26,"nodeType":"146","messageId":"147","endLine":6,"endColumn":34},{"ruleId":"144","severity":1,"message":"150","line":47,"column":15,"nodeType":"146","messageId":"147","endLine":47,"endColumn":19},{"ruleId":"144","severity":1,"message":"148","line":7,"column":8,"nodeType":"146","messageId":"147","endLine":7,"endColumn":14},{"ruleId":"144","severity":1,"message":"151","line":6,"column":8,"nodeType":"146","messageId":"147","endLine":6,"endColumn":19},{"ruleId":"144","severity":1,"message":"152","line":7,"column":9,"nodeType":"146","messageId":"147","endLine":7,"endColumn":16},{"ruleId":"144","severity":1,"message":"153","line":9,"column":8,"nodeType":"146","messageId":"147","endLine":9,"endColumn":16},{"ruleId":"144","severity":1,"message":"154","line":11,"column":10,"nodeType":"146","messageId":"147","endLine":11,"endColumn":14},{"ruleId":"144","severity":1,"message":"155","line":11,"column":16,"nodeType":"146","messageId":"147","endLine":11,"endColumn":21},{"ruleId":"144","severity":1,"message":"156","line":11,"column":23,"nodeType":"146","messageId":"147","endLine":11,"endColumn":27},{"ruleId":"144","severity":1,"message":"157","line":14,"column":9,"nodeType":"146","messageId":"147","endLine":14,"endColumn":17},{"ruleId":"144","severity":1,"message":"158","line":22,"column":9,"nodeType":"146","messageId":"147","endLine":22,"endColumn":28},{"ruleId":"144","severity":1,"message":"159","line":2,"column":17,"nodeType":"146","messageId":"147","endLine":2,"endColumn":26},{"ruleId":"144","severity":1,"message":"160","line":2,"column":28,"nodeType":"146","messageId":"147","endLine":2,"endColumn":36},{"ruleId":"144","severity":1,"message":"161","line":4,"column":10,"nodeType":"146","messageId":"147","endLine":4,"endColumn":14},{"ruleId":"144","severity":1,"message":"162","line":6,"column":8,"nodeType":"146","messageId":"147","endLine":6,"endColumn":18},{"ruleId":"144","severity":1,"message":"163","line":7,"column":8,"nodeType":"146","messageId":"147","endLine":7,"endColumn":15},{"ruleId":"144","severity":1,"message":"148","line":12,"column":8,"nodeType":"146","messageId":"147","endLine":12,"endColumn":14},{"ruleId":"144","severity":1,"message":"164","line":3,"column":8,"nodeType":"146","messageId":"147","endLine":3,"endColumn":14},{"ruleId":"144","severity":1,"message":"165","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":17},{"ruleId":"144","severity":1,"message":"166","line":6,"column":10,"nodeType":"146","messageId":"147","endLine":6,"endColumn":18},{"ruleId":"144","severity":1,"message":"167","line":18,"column":20,"nodeType":"146","messageId":"147","endLine":18,"endColumn":25},{"ruleId":"144","severity":1,"message":"150","line":48,"column":14,"nodeType":"146","messageId":"147","endLine":48,"endColumn":18},{"ruleId":"168","severity":1,"message":"169","line":65,"column":8,"nodeType":"170","messageId":"171","endLine":65,"endColumn":19},{"ruleId":"144","severity":1,"message":"172","line":65,"column":8,"nodeType":"146","messageId":"147","endLine":65,"endColumn":12},{"ruleId":"144","severity":1,"message":"166","line":14,"column":10,"nodeType":"146","messageId":"147","endLine":14,"endColumn":18},{"ruleId":"144","severity":1,"message":"173","line":15,"column":10,"nodeType":"146","messageId":"147","endLine":15,"endColumn":19},{"ruleId":"144","severity":1,"message":"174","line":2,"column":23,"nodeType":"146","messageId":"147","endLine":2,"endColumn":31},{"ruleId":"144","severity":1,"message":"175","line":9,"column":8,"nodeType":"146","messageId":"147","endLine":9,"endColumn":12},{"ruleId":"144","severity":1,"message":"176","line":10,"column":10,"nodeType":"146","messageId":"147","endLine":10,"endColumn":19},{"ruleId":"144","severity":1,"message":"157","line":26,"column":9,"nodeType":"146","messageId":"147","endLine":26,"endColumn":17},{"ruleId":"144","severity":1,"message":"150","line":67,"column":15,"nodeType":"146","messageId":"147","endLine":67,"endColumn":19},{"ruleId":"144","severity":1,"message":"154","line":3,"column":24,"nodeType":"146","messageId":"147","endLine":3,"endColumn":28},{"ruleId":"144","severity":1,"message":"157","line":26,"column":9,"nodeType":"146","messageId":"147","endLine":26,"endColumn":17},{"ruleId":"144","severity":1,"message":"167","line":30,"column":24,"nodeType":"146","messageId":"147","endLine":30,"endColumn":29},{"ruleId":"144","severity":1,"message":"150","line":37,"column":14,"nodeType":"146","messageId":"147","endLine":37,"endColumn":18},{"ruleId":"168","severity":1,"message":"169","line":55,"column":8,"nodeType":"170","messageId":"171","endLine":55,"endColumn":23},{"ruleId":"144","severity":1,"message":"172","line":55,"column":8,"nodeType":"146","messageId":"147","endLine":55,"endColumn":12},{"ruleId":"177","severity":1,"message":"178","line":37,"column":1,"nodeType":"179","endLine":37,"endColumn":34},"no-native-reassign",["180"],"no-negated-in-lhs",["181"],"no-unused-vars","'ProjectCards' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","'QUERY_ME' is defined but never used.","'data' is assigned a value but never used.","'NavDropdown' is defined but never used.","'logoUrl' is defined but never used.","'Homepage' is defined but never used.","'Icon' is defined but never used.","'Image' is defined but never used.","'Menu' is defined but never used.","'navigate' is assigned a value but never used.","'handleSidebarToggle' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'data' is defined but never used.","'background' is defined but never used.","'AboutUs' is defined but never used.","'Donate' is defined but never used.","'Donations' is defined but never used.","'Progress' is defined but never used.","'error' is assigned a value but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'name' is assigned a value but never used.","'Dummydata' is defined but never used.","'useQuery' is defined but never used.","'Auth' is defined but never used.","'useParams' is defined but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]