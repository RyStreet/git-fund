[{"E:\\1-code\\git-fund\\client\\src\\index.js":"1","E:\\1-code\\git-fund\\client\\src\\App.js":"2","E:\\1-code\\git-fund\\client\\src\\components\\ProjectCards.js":"3","E:\\1-code\\git-fund\\client\\src\\components\\Navbar.js":"4","E:\\1-code\\git-fund\\client\\src\\pages\\CreateProject.js":"5","E:\\1-code\\git-fund\\client\\src\\pages\\SignupForm.js":"6","E:\\1-code\\git-fund\\client\\src\\pages\\Profile.js":"7","E:\\1-code\\git-fund\\client\\src\\pages\\Homepage.js":"8","E:\\1-code\\git-fund\\client\\src\\pages\\LoginForm.js":"9","E:\\1-code\\git-fund\\client\\src\\pages\\SingleProject.js":"10","E:\\1-code\\git-fund\\client\\src\\components\\Donate.js":"11","E:\\1-code\\git-fund\\client\\src\\pages\\DummyData.js":"12","E:\\1-code\\git-fund\\client\\src\\components\\AboutUs.js":"13","E:\\1-code\\git-fund\\client\\src\\utils\\auth.js":"14","E:\\1-code\\git-fund\\client\\src\\components\\Collaborators.js":"15","E:\\1-code\\git-fund\\client\\src\\utils\\queries.js":"16","E:\\1-code\\git-fund\\client\\src\\utils\\mutations.js":"17","E:\\1-code\\git-fund\\client\\src\\components\\Collaborate.js":"18","E:\\1-code\\git-fund\\client\\src\\components\\Donations.js":"19"},{"size":281,"mtime":1677868928323,"results":"20","hashOfConfig":"21"},{"size":2026,"mtime":1678128057533,"results":"22","hashOfConfig":"21"},{"size":3027,"mtime":1678138660137,"results":"23","hashOfConfig":"21"},{"size":1587,"mtime":1678129930548,"results":"24","hashOfConfig":"21"},{"size":3869,"mtime":1678128057537,"results":"25","hashOfConfig":"21"},{"size":2731,"mtime":1678129824483,"results":"26","hashOfConfig":"21"},{"size":1450,"mtime":1678128057539,"results":"27","hashOfConfig":"21"},{"size":1368,"mtime":1678128057538,"results":"28","hashOfConfig":"21"},{"size":2641,"mtime":1678129824483,"results":"29","hashOfConfig":"21"},{"size":2006,"mtime":1678156862530,"results":"30","hashOfConfig":"21"},{"size":2349,"mtime":1678138660136,"results":"31","hashOfConfig":"21"},{"size":142,"mtime":1678128057537,"results":"32","hashOfConfig":"21"},{"size":392,"mtime":1677868928322,"results":"33","hashOfConfig":"21"},{"size":757,"mtime":1677868928326,"results":"34","hashOfConfig":"21"},{"size":724,"mtime":1678159609487,"results":"35","hashOfConfig":"21"},{"size":1457,"mtime":1678159330885,"results":"36","hashOfConfig":"21"},{"size":2559,"mtime":1678156248866,"results":"37","hashOfConfig":"21"},{"size":2656,"mtime":1678156505334,"results":"38","hashOfConfig":"21"},{"size":653,"mtime":1678138660137,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"v44aik",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"E:\\1-code\\git-fund\\client\\src\\index.js",[],["87","88"],"E:\\1-code\\git-fund\\client\\src\\App.js",["89"],"import React from 'react';\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport ProjectCards from './components/ProjectCards';\r\nimport Homepage from './pages/Homepage';\r\nimport SignupForm from './pages/SignupForm';\r\nimport LoginForm from './pages/LoginForm';\r\nimport CreateProject from './pages/CreateProject';\r\nimport Profile from './pages/Profile';\r\nimport SingleProject from './pages/SingleProject';\r\nimport Navbar from './components/Navbar';\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem('id_token');\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  return(\r\n  <ApolloProvider client={client}>\r\n    <Router>\r\n      <>\r\n        <Navbar />\r\n        <Routes>\r\n          <Route\r\n            path='/'\r\n            element={<Homepage />}\r\n          />\r\n          <Route\r\n            path='/profile'\r\n            element={<Profile />}\r\n          />\r\n          <Route\r\n            path='/login'\r\n            element={<LoginForm />}\r\n          />\r\n          <Route \r\n            path='/signup'\r\n            element={<SignupForm />}\r\n          />\r\n          <Route \r\n            path='/create-project'\r\n            element={<CreateProject />}\r\n          />\r\n          <Route \r\n            path='/projects/:projectId'\r\n            element={<SingleProject />}\r\n          />\r\n          <Route \r\n            path='/profiles/:username'\r\n            element={<Profile />}\r\n          />\r\n        </Routes>\r\n      </>\r\n    </Router>\r\n  </ApolloProvider>\r\n)};\r\n\r\nexport default App;","E:\\1-code\\git-fund\\client\\src\\components\\ProjectCards.js",["90","91"],"import React from \"react\"\r\nimport { Link } from 'react-router-dom'\r\nimport Donate from '../components/Donate'\r\nimport Donations from \"./Donations\"\r\n\r\nimport { Progress } from 'semantic-ui-react'\r\n\r\nconst ProjectCards = ({projects}) => { \r\n    if(!projects.length){ \r\n        return <h3>No Projects Yet</h3>;\r\n    }\r\n    return(\r\n        <div id=\"projectCard\">\r\n            {projects && \r\n                projects.map((project) => (\r\n                    \r\n                    <div key={project._id} className=\"MainTile\">  \r\n                        <div id=\"projectCardHeader\">\r\n                            <h3 id=\"projectCardTitle\">{project.title}</h3>\r\n                            <h4>\r\n                              By: <Link to={`/profiles/${project.creator}`}>{project.creator}</Link>\r\n                            </h4>\r\n                            \r\n                            <p id=\"projectCardDescription\">{project.description}</p>\r\n                            {/* <p id=\"projectCardCategory\">{project.category}</p> */}\r\n                            {/* <ul id=\"projectCardLanguages\">{project.languages}</ul> */}\r\n                        </div>\r\n\r\n                        <div id=\"projectCardFunding\" className=\"btn-fund-container\">\r\n                            <h6 id=\"projectCardFunding\"> Funding Goal: ${project.fundingGoal} </h6>\r\n                            {/* <h6 id=\"projectCardEarned\"> Funding Earned: ${project.fundingEarned} </h6> */}\r\n                            \r\n                            {/* <button id=\"projectCardDonate\" className=\"button\">Donate</button> */}\r\n                            {/* <Donate projectId={project._id} id=\"projectCardDonate\" className=\"button\"/> */}\r\n                        </div>\r\n\r\n                        <div>\r\n                          <Progress percent={\"10\"} inverted progress success/>\r\n                        </div>\r\n                        \r\n                        {/* <div id=\"projectCardEngagements\">\r\n                            <p id=\"projectCardFollows\">{project.follows}</p>\r\n                            <p id=\"projectCardContributors\">{project.contributors}</p>\r\n                        </div> */}\r\n\r\n                        <Link to={`/projects/${project._id}`}>\r\n                          View project details \r\n                        </Link>\r\n                    </div>\r\n            ))} \r\n        </div>\r\n\r\n\r\n    //----------------- PUT THESE STYLES IN ABOVE AFTER CreateProject.js WORKS ---------------- //\r\n        // <div className=\"MainTile\">\r\n            // <h4>Project : </h4>\r\n            // <p>\r\n            //   Description : \r\n            // </p>\r\n            // <div className='btn-fund-container'>\r\n            // <p>Funding -</p>\r\n            // <button className='button' >Donate</button>\r\n            // </div>\r\n            // <Progress percent={\"10\"} inverted progress success/>\r\n        // </div>\r\n    // --------------------------------------------------------------------------------------- //\r\n    )\r\n};\r\n\r\nexport default ProjectCards;","E:\\1-code\\git-fund\\client\\src\\components\\Navbar.js",["92","93"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport logo from '../assets/Logo.png';\r\nimport Homepage from '../pages/Homepage';\r\nimport Auth from '../utils/auth';\r\n\r\nfunction NavBar() {\r\n  const logout = (event) => {\r\n    event.preventDefault();\r\n    Auth.logout();\r\n  }\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n      <Container>\r\n        <Navbar.Brand as={Link} to=\"/\"><img className='logo' alt='GitFund' src={logo}/></Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n            {Auth.loggedIn() ? (\r\n              <>\r\n                <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n                <Nav.Link as={Link} to=\"/profile\">Profile</Nav.Link>\r\n                <Nav.Link as={Link} onClick={logout}>Logout</Nav.Link>\r\n              </> \r\n            ) : (\r\n              <>\r\n                <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n                <Nav.Link as={Link} to=\"/profile\">Profile</Nav.Link>\r\n                <Nav.Link as={Link} to=\"/login\">Login</Nav.Link>\r\n                <Nav.Link as={Link} to=\"signup\">Sign Up</Nav.Link>\r\n              </>\r\n            )}            \r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default NavBar;","E:\\1-code\\git-fund\\client\\src\\pages\\CreateProject.js",["94"],"import React, { useState } from \"react\";\r\nimport { ApolloError, useMutation } from \"@apollo/client\";\r\n\r\nimport { ADD_PROJECT } from \"../utils/mutations\";\r\nimport { QUERY_PROJECTS, QUERY_ME } from \"../utils/queries\";\r\n\r\nimport Auth from \"../utils/auth\";\r\n\r\nfunction CreateProject() {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [fundingGoal, setFundingGoal] = useState('');\r\n  const [repo, setRepo] = useState('');\r\n\r\n  const [addProject, { error }] = useMutation(ADD_PROJECT, {\r\n    update(cache, { data: { addProject } }) {\r\n      try {\r\n        const { projects } = cache.readQuery({ query: QUERY_PROJECTS });\r\n\r\n        cache.writeQuery({\r\n          query: QUERY_PROJECTS,\r\n          data: { projects: [addProject, ...projects] },\r\n        });\r\n      } catch (e) {\r\n        console.error(e)\r\n      }\r\n\r\n      const { me } = cache.readQuery({ query: QUERY_ME });\r\n      cache.writeQuery({\r\n        query: QUERY_ME,\r\n        data: { me: { ...me, projects: [...me.projects, addProject] } },\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const error = ApolloError\r\n    console.log(error instanceof Error)\r\n    console.log('handleFormSubmit')\r\n    try {\r\n      const { data } = await addProject({\r\n        variables: {\r\n          title,\r\n          description,\r\n          fundingGoal,\r\n          repo,\r\n          creator: Auth.getProfile().data.username,\r\n        },\r\n      });\r\n\r\n      setTitle('');\r\n      setDescription('');\r\n      setFundingGoal('');\r\n      setRepo('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    } \r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === 'title') {\r\n      setTitle(value);\r\n    }\r\n    if (name === 'description') {\r\n      setDescription(value);\r\n    }\r\n    if (name === 'fundingGoal') {\r\n      setFundingGoal(parseInt(value));\r\n    }\r\n    if (name === 'repo') {\r\n      setRepo(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {Auth.loggedIn() ? (\r\n      <>\r\n        <h1>Post New Project</h1>\r\n        <form onSubmit={handleFormSubmit}>\r\n          <div>\r\n            <textarea \r\n              name=\"title\" value={title} id=\"title\" placeholder=\"What is your project title?\"\r\n              className=\"\" onChange={handleChange}\r\n            />\r\n          </div> \r\n        \r\n          <div>\r\n            <textarea \r\n              name=\"description\" value={description} id=\"description\" placeholder=\"What is your project description?\"\r\n              className=\"\" onChange={handleChange}\r\n              />\r\n          </div>  \r\n\r\n          <div>\r\n            <textarea \r\n              name=\"repo\" value={repo} id=\"repo\" placeholder=\"Provide project repository's URL\"\r\n              className=\"\" onChange={handleChange}\r\n              />\r\n          </div>  \r\n\r\n          <div>\r\n            <label>How much funding is needed?</label>\r\n            <input \r\n              name=\"fundingGoal\" value={fundingGoal} id=\"fundingGoal\" type=\"number\" \r\n              className=\"\" onChange={handleChange}\r\n            />\r\n          </div>   \r\n          \r\n          {/* <div>\r\n            <input id=\"contributors\" type=\"text\" name=\"contributors\" placeholder=\"Optional: What kind of collaboration is needed?\"/>\r\n          </div>      */} \r\n\r\n          {/* <div>\r\n            <label>Languages used:</label>\r\n            <input id=\"languages\" type=\"text\" name=\"languages\"/>\r\n          </div> */}\r\n\r\n          <div>\r\n            <button type=\"submit\">Post Project</button>\r\n          </div>\r\n\r\n          {error && (\r\n            <div>\r\n              {error.message}\r\n            </div>\r\n          )}\r\n        </form>\r\n      </>\r\n      ) : (\r\n        <h3>Login or sign up to create a new project</h3>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\nexport default CreateProject;","E:\\1-code\\git-fund\\client\\src\\pages\\SignupForm.js",[],"E:\\1-code\\git-fund\\client\\src\\pages\\Profile.js",[],"E:\\1-code\\git-fund\\client\\src\\pages\\Homepage.js",["95","96","97","98","99"],"import { useQuery } from '@apollo/client';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { data } from './DummyData';\r\n// import { useQuery } from '@apollo/client';\r\nimport background from '../assets/background-mobile.jpg'\r\nimport AboutUs from '../components/AboutUs';\r\nimport ProjectCards from '../components/ProjectCards';\r\n\r\nimport Auth from '../utils/auth';\r\nimport { QUERY_PROJECTS } from '../utils/queries';\r\n\r\n\r\nfunction Homepage() {\r\n  const {loading, data} = useQuery(QUERY_PROJECTS)\r\n  const projects = data?.projects || []\r\n\r\n  return (\r\n    <div>\r\n      <h1>Help fund or collaborate on projects!</h1>\r\n      \r\n      <div>\r\n        {Auth.loggedIn() ? (\r\n          <>\r\n            <Link to='/create-project'>\r\n              <button>+ New Project</button>\r\n            </Link>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Link to={'/login'}>\r\n              <button>+ New Project</button>\r\n            </Link>\r\n          </>\r\n         )}\r\n        \r\n      </div>\r\n      <div>\r\n        {loading ? (\r\n            <div>Loading...</div>\r\n          ) : (\r\n            <ProjectCards\r\n              projects={projects}\r\n            />\r\n          )}\r\n      </div>\r\n\r\n      {/* <img className='background' src={background}></img>\r\n      <AboutUs/> */}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Homepage;","E:\\1-code\\git-fund\\client\\src\\pages\\LoginForm.js",[],"E:\\1-code\\git-fund\\client\\src\\pages\\SingleProject.js",[],"E:\\1-code\\git-fund\\client\\src\\components\\Donate.js",["100","101","102","103","104"],"import { useMutation } from '@apollo/client'\r\nimport React, { useState } from 'react'\r\nimport { Button, Form, Icon, Modal } from 'semantic-ui-react'\r\nimport { ADD_DONATION } from '../utils/mutations'\r\nimport Auth from '../utils/auth'\r\n\r\nfunction modalReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'close':\r\n      return { open: false }\r\n    case 'open':\r\n      return { open: true, size: action.size }\r\n    default:\r\n      throw new Error('Unsupported action...')\r\n  }\r\n}\r\n\r\nconst DonateModal = ({projectId}) => {\r\n  const [state, dispatch] = React.useReducer(modalReducer, {\r\n    open: false,\r\n    size: undefined,\r\n  })\r\n  const { open, size } = state\r\n\r\n  //////////// FOR DISPLAYING FUNDINGEARNED UNTIL WE FIGURE OUT STRIPE\r\n  const [amount, setAmount] = useState(\"\");\r\n\r\n  const [addDonation, {error}] = useMutation(ADD_DONATION)\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    console.log(\"adding donation\")\r\n    try{\r\n      const {data} = await addDonation({\r\n        variables:{\r\n          projectId,\r\n          amount,\r\n          donaterName: Auth.getProfile().data.username,\r\n        }\r\n      });\r\n      setAmount(\"\")\r\n    } catch (err){\r\n      console.error(err)\r\n    }\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    let {name, value} = event.target;\r\n\r\n    if(name = \"amount\") {\r\n      setAmount(parseInt(value))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button className=\"ui button\" onClick={() => dispatch({ type: 'open', size: 'tiny' })}>\r\n        Donate\r\n      </Button>\r\n\r\n      <Modal\r\n        as={Form} onSubmit={handleFormSubmit}\r\n        size={size}\r\n        open={open}\r\n        onClose={() => dispatch({ type: 'close' })}\r\n      >\r\n        <Modal.Header>Donate to this project</Modal.Header>\r\n        <Modal.Content>\r\n         <h6>Donation amount ($):</h6>\r\n            <input \r\n            value={amount} \r\n            name='amount' \r\n            type='number'\r\n            onChange={handleChange}>  \r\n            </input>\r\n                 \r\n        </Modal.Content>\r\n\r\n        <Modal.Actions>\r\n          <Button negative onClick={() => dispatch({ type: 'close' })}>\r\n            Cancel\r\n          </Button>\r\n          <Button type='submit'>\r\n            Send\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DonateModal;","E:\\1-code\\git-fund\\client\\src\\pages\\DummyData.js",[],"E:\\1-code\\git-fund\\client\\src\\components\\AboutUs.js",[],"E:\\1-code\\git-fund\\client\\src\\utils\\auth.js",["105"],"import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = this.getToken();\r\n    return token && !this.isTokenExpired(token) ? true : false;\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    const decoded = decode(token);\r\n    if (decoded.exp < Date.now() / 1000) {\r\n      localStorage.removeItem('id_token');\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    localStorage.setItem('id_token', idToken);\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('id_token');\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","E:\\1-code\\git-fund\\client\\src\\components\\Collaborators.js",[],"E:\\1-code\\git-fund\\client\\src\\utils\\queries.js",[],"E:\\1-code\\git-fund\\client\\src\\utils\\mutations.js",[],"E:\\1-code\\git-fund\\client\\src\\components\\Collaborate.js",["106","107","108"],"import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { ADD_COLLABORATOR } from '../utils/mutations';\r\n\r\nimport { Button, Modal, Form } from 'semantic-ui-react';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nfunction modalReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'close':\r\n      return { open: false }\r\n    case 'open':\r\n      return { open: true, size: action.size }\r\n    default:\r\n      throw new Error('Unsupported action...')\r\n  }\r\n}\r\n\r\nconst CollaborateModal = ({ projectId }) => {\r\n  const [state, dispatch] = React.useReducer(modalReducer, {\r\n    open: false,\r\n    size: undefined,\r\n  })\r\n  const { open, size } = state\r\n\r\n  const [collabNotes, setCollabNotes] = useState('');\r\n\r\n  const [addCollaborator, { error }] = useMutation(ADD_COLLABORATOR);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    console.log('adding collaborator')\r\n    try {\r\n      console.log({\r\n        projectId,\r\n        collabNotes,\r\n      })\r\n      const { data } = await addCollaborator({\r\n        variables: {\r\n          projectId,\r\n          collabNotes,\r\n        }\r\n      });\r\n\r\n      setCollabNotes('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    // event.preventDefault();\r\n\r\n    const { name, value } = event.target;\r\n\r\n    if (name === 'collabNotes') {\r\n      setCollabNotes(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button className=\"ui button\" onClick={() => dispatch({ type: 'open', size: 'tiny' })}>\r\n        Collaborate\r\n      </Button>\r\n\r\n      {/* { event => handleFormSubmit(event)} */}\r\n      <Modal\r\n        as={Form} onSubmit={handleFormSubmit}\r\n        size={size}\r\n        open={open}\r\n        onClose={() => dispatch({ type: 'close' })}\r\n      >\r\n        <Modal.Header>Collaborate on this project</Modal.Header>\r\n        \r\n        <Modal.Content>\r\n            <textarea\r\n                name='collabNotes' id='collabNotes' value={collabNotes} type='text'\r\n                label='What will you contribute to this project?' required\r\n                placeholder='Include what languages and technologies you will use'\r\n                className='' onChange={handleChange}\r\n            />\r\n        </Modal.Content>\r\n\r\n        <Modal.Actions>\r\n          <Button negative onClick={() => dispatch({ type: 'close' })}>\r\n            Cancel\r\n          </Button>\r\n          <Button type='submit' >{/* positive onClick={() => dispatch({ type: 'close' })} */}\r\n            Send\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default CollaborateModal;","E:\\1-code\\git-fund\\client\\src\\components\\Donations.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":12,"column":8,"nodeType":"115","messageId":"116","endLine":12,"endColumn":20},{"ruleId":"113","severity":1,"message":"117","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":14},{"ruleId":"113","severity":1,"message":"118","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":17},{"ruleId":"113","severity":1,"message":"119","line":6,"column":8,"nodeType":"115","messageId":"116","endLine":6,"endColumn":19},{"ruleId":"113","severity":1,"message":"120","line":8,"column":8,"nodeType":"115","messageId":"116","endLine":8,"endColumn":16},{"ruleId":"113","severity":1,"message":"121","line":43,"column":15,"nodeType":"115","messageId":"116","endLine":43,"endColumn":19},{"ruleId":"113","severity":1,"message":"122","line":2,"column":17,"nodeType":"115","messageId":"116","endLine":2,"endColumn":26},{"ruleId":"113","severity":1,"message":"123","line":2,"column":28,"nodeType":"115","messageId":"116","endLine":2,"endColumn":36},{"ruleId":"113","severity":1,"message":"124","line":4,"column":10,"nodeType":"115","messageId":"116","endLine":4,"endColumn":14},{"ruleId":"113","severity":1,"message":"125","line":6,"column":8,"nodeType":"115","messageId":"116","endLine":6,"endColumn":18},{"ruleId":"113","severity":1,"message":"126","line":7,"column":8,"nodeType":"115","messageId":"116","endLine":7,"endColumn":15},{"ruleId":"113","severity":1,"message":"127","line":3,"column":24,"nodeType":"115","messageId":"116","endLine":3,"endColumn":28},{"ruleId":"113","severity":1,"message":"128","line":28,"column":24,"nodeType":"115","messageId":"116","endLine":28,"endColumn":29},{"ruleId":"113","severity":1,"message":"121","line":35,"column":14,"nodeType":"115","messageId":"116","endLine":35,"endColumn":18},{"ruleId":"129","severity":1,"message":"130","line":51,"column":8,"nodeType":"131","messageId":"132","endLine":51,"endColumn":23},{"ruleId":"113","severity":1,"message":"133","line":51,"column":8,"nodeType":"115","messageId":"116","endLine":51,"endColumn":12},{"ruleId":"134","severity":1,"message":"135","line":37,"column":1,"nodeType":"136","endLine":37,"endColumn":34},{"ruleId":"113","severity":1,"message":"137","line":8,"column":8,"nodeType":"115","messageId":"116","endLine":8,"endColumn":12},{"ruleId":"113","severity":1,"message":"128","line":30,"column":29,"nodeType":"115","messageId":"116","endLine":30,"endColumn":34},{"ruleId":"113","severity":1,"message":"121","line":41,"column":15,"nodeType":"115","messageId":"116","endLine":41,"endColumn":19},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'ProjectCards' is defined but never used.","Identifier","unusedVar","'Donate' is defined but never used.","'Donations' is defined but never used.","'NavDropdown' is defined but never used.","'Homepage' is defined but never used.","'data' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'data' is defined but never used.","'background' is defined but never used.","'AboutUs' is defined but never used.","'Icon' is defined but never used.","'error' is assigned a value but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'name' is assigned a value but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'Auth' is defined but never used.","no-global-assign","no-unsafe-negation"]