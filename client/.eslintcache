[{"D:\\git-fund\\client\\src\\index.js":"1","D:\\git-fund\\client\\src\\App.js":"2","D:\\git-fund\\client\\src\\pages\\Homepage.js":"3","D:\\git-fund\\client\\src\\pages\\SignupForm.js":"4","D:\\git-fund\\client\\src\\components\\ProjectCards.js":"5","D:\\git-fund\\client\\src\\pages\\LoginForm.js":"6","D:\\git-fund\\client\\src\\pages\\CreateProject.js":"7","D:\\git-fund\\client\\src\\components\\Navbar.js":"8","D:\\git-fund\\client\\src\\pages\\SingleProject.js":"9","D:\\git-fund\\client\\src\\pages\\Profile.js":"10","D:\\git-fund\\client\\src\\components\\Footer.js":"11","D:\\git-fund\\client\\src\\components\\Donations.js":"12","D:\\git-fund\\client\\src\\components\\AboutUs.js":"13","D:\\git-fund\\client\\src\\assets\\logo.js":"14","D:\\git-fund\\client\\src\\utils\\queries.js":"15","D:\\git-fund\\client\\src\\utils\\auth.js":"16","D:\\git-fund\\client\\src\\components\\Donate.js":"17","D:\\git-fund\\client\\src\\components\\Collaborators.js":"18","D:\\git-fund\\client\\src\\utils\\mutations.js":"19","D:\\git-fund\\client\\src\\components\\Collaborate.js":"20"},{"size":270,"mtime":1678237682855,"results":"21","hashOfConfig":"22"},{"size":1970,"mtime":1678385001101,"results":"23","hashOfConfig":"22"},{"size":1312,"mtime":1678384867523,"results":"24","hashOfConfig":"22"},{"size":2767,"mtime":1678384903375,"results":"25","hashOfConfig":"22"},{"size":1632,"mtime":1678384748166,"results":"26","hashOfConfig":"22"},{"size":2595,"mtime":1678384894803,"results":"27","hashOfConfig":"22"},{"size":3446,"mtime":1678384789109,"results":"28","hashOfConfig":"22"},{"size":3020,"mtime":1678384695702,"results":"29","hashOfConfig":"22"},{"size":2248,"mtime":1678384842287,"results":"30","hashOfConfig":"22"},{"size":2844,"mtime":1678384494572,"results":"31","hashOfConfig":"22"},{"size":1927,"mtime":1678383829927,"results":"32","hashOfConfig":"22"},{"size":577,"mtime":1678321433887,"results":"33","hashOfConfig":"22"},{"size":657,"mtime":1678307175657,"results":"34","hashOfConfig":"22"},{"size":40173,"mtime":1678237682775,"results":"35","hashOfConfig":"22"},{"size":1402,"mtime":1678384930223,"results":"36","hashOfConfig":"22"},{"size":720,"mtime":1678237682876,"results":"37","hashOfConfig":"22"},{"size":2351,"mtime":1678384430012,"results":"38","hashOfConfig":"22"},{"size":723,"mtime":1678321433886,"results":"39","hashOfConfig":"22"},{"size":1775,"mtime":1678384987419,"results":"40","hashOfConfig":"22"},{"size":2912,"mtime":1678384638328,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9avf6r",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},"D:\\git-fund\\client\\src\\index.js",[],"D:\\git-fund\\client\\src\\App.js",[],"D:\\git-fund\\client\\src\\pages\\Homepage.js",["90","91"],"import { useQuery } from '@apollo/client';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport background from '../assets/background-mobile.jpg'\nimport AboutUs from '../components/AboutUs';\nimport ProjectCards from '../components/ProjectCards';\n\nimport Auth from '../utils/auth';\nimport { QUERY_PROJECTS } from '../utils/queries';\n\n\nfunction Homepage() {\n  const {loading, data} = useQuery(QUERY_PROJECTS)\n  const projects = data?.projects || []\n\n  return (\n    <div className='HomeMainContainer'>\n      <h3>Help fund or collaborate on projects!</h3>\n      \n      <div>\n        {Auth.loggedIn() ? (\n          <>\n            <Link to='/create-project'>\n              <button style={{backgroundColor:'#FE9F00'}} className='button'>+ New Project</button>\n            </Link>\n          </>\n        ) : (\n          <>\n            <Link to={'/login'}>\n              <button className='button'>+ New Project</button>\n            </Link>\n          </>\n         )}\n        \n      </div>\n      <div>\n        {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <ProjectCards\n              projects={projects}\n            />\n          )}\n      </div>\n\n      {/* <img className='background' src={background}></img>\n      <AboutUs/> */}\n    </div>\n  )\n};\n\nexport default Homepage;","D:\\git-fund\\client\\src\\pages\\SignupForm.js",[],"D:\\git-fund\\client\\src\\components\\ProjectCards.js",[],"D:\\git-fund\\client\\src\\pages\\LoginForm.js",[],"D:\\git-fund\\client\\src\\pages\\CreateProject.js",["92"],"import React, { useState } from \"react\";\nimport { ApolloError, useMutation } from \"@apollo/client\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { ADD_PROJECT } from \"../utils/mutations\";\nimport { QUERY_PROJECTS } from \"../utils/queries\";\n\nimport Auth from \"../utils/auth\";\n\n\nfunction CreateProject() {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [fundingGoal, setFundingGoal] = useState('');\n  const [repo, setRepo] = useState('');\n  const navigate = useNavigate()\n\n  const [addProject, { error }] = useMutation(ADD_PROJECT, {\n    update(cache, { data: { addProject } }) {\n      try {\n        const { projects } = cache.readQuery({ query: QUERY_PROJECTS });\n\n        cache.writeQuery({\n          query: QUERY_PROJECTS,\n          data: { projects: [addProject, ...projects] },\n        });\n      } catch (e) {\n        console.error(e)\n      }\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const error = ApolloError\n    console.log(error instanceof Error)\n    console.log('handleFormSubmit')\n    try {\n      const { data } = await addProject({\n        variables: {\n          title,\n          description,\n          fundingGoal,\n          repo,\n          creator: Auth.getProfile().data.username,\n        },\n      });\n\n      setTitle('');\n      setDescription('');\n      setFundingGoal('');\n      setRepo('');\n\n      navigate(\"/profile\", {replace: true})\n    } catch (err) {\n      console.error(err);\n    } \n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'title') {\n      setTitle(value);\n    }\n    if (name === 'description') {\n      setDescription(value);\n    }\n    if (name === 'fundingGoal') {\n      setFundingGoal(parseInt(value));\n    }\n    if (name === 'repo') {\n      setRepo(value);\n    }\n  };\n\n  return (\n    <div >\n      {Auth.loggedIn() ? (\n      <div className=\"newProject\">\n        <h2>Post New Project</h2>\n        <form onSubmit={handleFormSubmit} className=\"newProject_form\">\n          \n          <div>\n            <textarea \n              name=\"title\" value={title} id=\"title\" placeholder=\"What is your project title?\"\n              className=\"textarea\" onChange={handleChange}\n            />\n          </div>\n        \n          <div>\n            <textarea \n              name=\"description\" value={description} id=\"description\" placeholder=\"What is your project description?\"\n              className=\"textarea\" onChange={handleChange}\n              />\n          </div>  \n\n          <div>\n            <textarea \n              name=\"repo\" value={repo} id=\"repo\" placeholder=\"Provide project repository's URL\"\n              className=\"textarea\" onChange={handleChange}\n              />\n          </div>  \n\n          <div className=\"fundingGoal\">\n            <label>How much funding is needed?</label>\n            <input \n              name=\"fundingGoal\" value={fundingGoal} id=\"fundingGoal\" type=\"number\" \n              className=\"\" onChange={handleChange}\n            />\n          </div>   \n\n          <div>\n            <button className=\"button\" type=\"submit\">Post Project</button>\n          </div>\n\n          {error && (\n            <div>\n              {error.message}\n            </div>\n          )}\n        </form>\n      </div>\n      ) : (\n        <h3>Login or sign up to create a new project</h3>\n      )}\n    </div>\n  )\n};\n\n\nexport default CreateProject;","D:\\git-fund\\client\\src\\components\\Navbar.js",["93","94","95","96","97","98"],"import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport logo from '../assets/Logo.png';\nimport Auth from '../utils/auth';\nimport { Icon, Image, Menu } from 'semantic-ui-react';\n\nfunction NavBar() {\n  const navigate=useNavigate()\n  const handleLogout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n    \n  }\n  const [isMobile, setIsMobile] = useState(false);\n\n  const handleSidebarToggle = () => {\n    setIsMobile(!isMobile);\n  };\n  return (\n    // <Menu stackable\n    // // borderless\n    // // className={` bg-light `}\n    // className='nav'\n    // >\n\n  //   <Menu.Item>\n  //     <Link to={'/'}>\n  //       <Image src={logo} className=\"logo\"  size='small' />\n  //     </Link>\n  //   </Menu.Item>\n\n  //   <Menu.Menu position='right'>\n  //     {Auth.loggedIn() ? (\n  //       <>\n  //       <Link to={'/'}>      \n  //         <Menu.Item color='text-dark' className='text-large'  name='home' />\n  //       </Link>\n  //       <Link to={'/profile'}>\n  //         <Menu.Item  color='text-dark' name='profile' />\n  //       </Link>\n  //        <Link onClick={handleLogout}>\n  //         <Menu.Item  color='text-dark' name='logout' />\n  //        </Link>\n  //       </>\n  //     ) : (\n  //       <>\n     \n  //     <Link to={'/'}>\n        \n  //       <Menu.Item color='text-dark' className='text-large'  name='Home' />\n  //     </Link>\n  //       <Link to={'/signup'}>\n        \n  //         <Menu.Item  color='text-dark' name='Signup' />\n  //       </Link>\n  //       <Link to={'/login'}> \n  //         <Menu.Item  color='text-dark' name='Login' />\n  //       </Link>\n  //       </>\n  //     )}\n  //   </Menu.Menu>\n  // </Menu>\n  // )\n\n\n    <Navbar className='nav sticky-top' collapseOnSelect expand=\"lg\" bg=\"light\" >\n      <Container>\n        <Navbar.Brand as={Link} to=\"/\"><img src={logo} className=\"logo\" size='small' alt='gitfund logo'/>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"container-fluid justify-content-end navStyles\">\n            {Auth.loggedIn() ? (\n              <>\n                <Nav.Link as={Link} to=\"/\">Home</Nav.Link> \n                <Nav.Link as={Link} to=\"/profile\">Profile</Nav.Link>\n                <Nav.Link as={Link} onClick={handleLogout}>Logout</Nav.Link>\n              </> \n            ) : (\n              <>\n                <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n                <Nav.Link as={Link} to=\"/profile\">Profile</Nav.Link>\n                <Nav.Link as={Link} to=\"/login\">Login</Nav.Link>\n                <Nav.Link as={Link} to=\"signup\">Sign Up</Nav.Link>\n              </>\n            )}            \n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default NavBar;","D:\\git-fund\\client\\src\\pages\\SingleProject.js",["99","100"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport Donate from '../components/Donate'\nimport Collaborate from '../components/Collaborate'\nimport Collaborators from '../components/Collaborators';\nimport Donations from '../components/Donations';\n\nimport { QUERY_SINGLE_PROJECT } from '../utils/queries';\n\nimport Auth from '../utils/auth';\n\nfunction SingleProject() {\n  const { projectId } = useParams();\n  const { loading, data } = useQuery(QUERY_SINGLE_PROJECT, {\n    variables: { projectId: projectId },\n  });\n\n  const project = data?.project || {};\n  console.log(project)\n  if (!Auth.loggedIn()) {\n    return (\n      <Link to={'/login'} className=\"textDecNone\">\n       <div className=\"msgScreen\">\n          <h2>Login or sign up to view user profiles</h2>\n        </div>\n      </Link>\n    )\n  }\n  if (loading) {\n    return <div>Loading...</div>\n  }\n\n  // For total donations\n  let donations = project.fundingEarned\n  console.log(donations)\n\n  let total = 0\n\n  for (let i = 0; i < donations.length; i++){\n   const loopDonations = donations[i].amount\n   console.log(\"LOOP\", loopDonations)   \n\n   total += loopDonations\n  }\n  console.log(total)\n  \n\n  return (\n    <>\n      <div className='project'>\n        <div className='project-section1'>\n          <h1>{project.title}</h1>\n          <h5>By: {project.creator}</h5>\n          <h5>{project.description}</h5>\n          <h5>Project Repository: {project.repo}</h5>\n        </div>  \n\n        <br/>\n\n        <div className='project-section3'>          \n          <h4>Funding Total: ${total}</h4>\n          <h4>Funding Goal: ${project.fundingGoal}</h4>\n          {/* <Progress percent=\"80\" inverted progress success/> */}\n          <Donate projectId={project._id} className='button donate-btn' />\n        </div>\n\n        <div className='project-section2'>\n          <h4>Collaborators:</h4>\n          <h5><Collaborators collaborators={project.collaborators}/></h5>\n          <Collaborate projectId={project._id} className='button' />\n        </div>\n      </div>\n\n      <div > \n        <Donations fundingEarned={project.fundingEarned}/>\n      </div>\n    </>\n  )\n};\n\nexport default SingleProject;","D:\\git-fund\\client\\src\\pages\\Profile.js",["101","102","103","104"],"import React,  {useState } from \"react\";\nimport { Link, Navigate, useNavigate, useParams } from \"react-router-dom\";\nimport Auth from '../utils/auth';\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_ME, QUERY_USER } from \"../utils/queries\"\nimport ProjectCards from \"../components/ProjectCards\";\nimport { useMutation } from \"@apollo/client\";\nimport { EDIT_BIO } from '../utils/mutations'\n\nimport EdiText from 'react-editext';\n\n\nfunction Profile() {  \n  const navigate = useNavigate()\n\n  // For bio \n  const [bio, setBio] = useState('');\n  const [editBio, {error}] = useMutation(EDIT_BIO);\n\n  const { username: userParam } = useParams();\n  const {loading, data} = useQuery(userParam ? QUERY_USER : QUERY_ME, {\n    variables: { username: userParam }\n  });\n\n  const user = data?.me || data?.user || []\n  \n  const projects = user.projects\n  const collabProjects = user.collabProjects\n\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n    return <Navigate to=\"/profile\" />\n  }\n  if (!Auth.loggedIn()) {\n    return (\n      <Link to={'/login'} className=\"textDecNone\">\n        <div className=\"msgScreen\">\n          <h2>Login or sign up to view user profiles</h2>\n        </div>\n      </Link>\n    )\n  }\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  // For saving and editing bio\n  const handleSaveBio = async (bio) => {\n    console.log('New Bio Saved:', bio);\n    try {\n      const {data} = await editBio({\n        variables: {\n          userId: user._id,\n          bio\n        }\n      })\n      setBio(\"\");\n     \n      navigate(0)\n    } catch (err) {\n      console.error(err)\n    }\n  };\n\n  const handleChange = (event) => {\n    let { name, value} = event.target;\n\n    if(name= \"bio\") {\n      setBio(value)\n    }\n  }\n\n  return (\n    <div className=\"profileMargins\">\n      <div>\n        <h2>{userParam ? `Now Viewing ${user.username}'s` : `Your`} Profile</h2>\n        <h5>Email: {user.email}</h5>\n        {!userParam ? (\n          <div>\n            <h5 style={{maxWidth:\"70%\"}}>Bio: {user.bio}</h5>\n            <EdiText \n              name=\"bio\" type='textarea' value={bio} \n              editButtonContent=\"Edit\"\n              inputProps={{ placeholder:\"Edit your bio here\", style: {maxWidth:\"70%\"}, rows: 3 }}\n              onSave={handleSaveBio} onChange={handleChange}\n            />\n          </div>\n        ) : (\n          <h5 style={{maxWidth:\"70%\"}}>Bio: {user.bio}</h5>\n        )}     \n\n      <br/>\n\n        <div>\n          <h3>{userParam ? `${user.username}'s` : `Your`} Projects:</h3>\n          <ProjectCards\n            projects={projects}\n          />\n        </div>\n      \n      <br/>\n\n        <div>\n          <h3>Collaborated Projects:</h3>\n          <ProjectCards\n            projects={collabProjects}\n          />\n        </div>\n\n      </div>       \n    </div>\n  )\n};\n\nexport default Profile;","D:\\git-fund\\client\\src\\components\\Footer.js",[],"D:\\git-fund\\client\\src\\components\\Donations.js",[],"D:\\git-fund\\client\\src\\components\\AboutUs.js",[],"D:\\git-fund\\client\\src\\assets\\logo.js",[],"D:\\git-fund\\client\\src\\utils\\queries.js",[],"D:\\git-fund\\client\\src\\utils\\auth.js",["105"],"import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    const decoded = decode(token);\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n","D:\\git-fund\\client\\src\\components\\Donate.js",["106","107","108","109","110"],"import { useMutation } from '@apollo/client'\nimport React, { useState } from 'react'\nimport { Button, Form, Icon, Modal } from 'semantic-ui-react'\nimport { ADD_DONATION } from '../utils/mutations'\nimport Auth from '../utils/auth'\nimport { useNavigate } from \"react-router-dom\";\n\nfunction modalReducer(state, action) {\n  switch (action.type) {\n    case 'close':\n      return { open: false }\n    case 'open':\n      return { open: true, size: action.size }\n    default:\n      throw new Error('Unsupported action...')\n  }\n}\n\nconst DonateModal = ({projectId}) => {\n  const [state, dispatch] = React.useReducer(modalReducer, {\n    open: false,\n    size: undefined,\n  })\n  const { open, size } = state\n\n  const navigate = useNavigate()\n  //////////// FUTURE DEVELOPMENT: IMPLEMENT STRIPE FOR PAYMENTS\n  const [amount, setAmount] = useState(\"\");\n\n  const [addDonation, {error}] = useMutation(ADD_DONATION)\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    console.log(\"adding donation\")\n    try{\n      const {data} = await addDonation({\n        variables:{\n          projectId,\n          amount,\n          donaterName: Auth.getProfile().data.username,\n        }\n      });\n      setAmount(\"\")\n\n      navigate(0)\n    } catch (err){\n      console.error(err)\n    }\n  }\n\n  const handleChange = (event) => {\n    let {name, value} = event.target;\n\n    if(name = \"amount\") {\n      setAmount(parseInt(value))\n    }\n  }\n\n  return (\n    <>\n      <Button className=\"ui button\" onClick={() => dispatch({ type: 'open', size: 'tiny' })}>\n        Donate\n      </Button>\n\n      <Modal\n        as={Form} onSubmit={handleFormSubmit}\n        size={size}\n        open={open}\n        onClose={() => dispatch({ type: 'close' })}\n      >\n        <Modal.Header>Donate to this project</Modal.Header>\n        <Modal.Content>\n         <h6>Donation amount ($):</h6>\n            <input \n            value={amount} \n            name='amount' \n            type='number'\n            onChange={handleChange}>  \n            </input>\n                 \n        </Modal.Content>\n\n        <Modal.Actions>\n          <Button negative onClick={() => dispatch({ type: 'close' })}>\n            Cancel\n          </Button>\n          <Button type='submit'>\n            Send\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    </>\n  )\n}\n\nexport default DonateModal;","D:\\git-fund\\client\\src\\components\\Collaborators.js",[],"D:\\git-fund\\client\\src\\utils\\mutations.js",[],"D:\\git-fund\\client\\src\\components\\Collaborate.js",["111"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_COLLABORATOR } from '../utils/mutations';\nimport {QUERY_SINGLE_PROJECT} from \"../utils/queries\"\n\nimport { Button, Modal, Form } from 'semantic-ui-react';\n\nimport { useNavigate } from 'react-router-dom';\n\nfunction modalReducer(state, action) {\n  switch (action.type) {\n    case 'close':\n      return { open: false }\n    case 'open':\n      return { open: true, size: action.size }\n    default:\n      throw new Error('Unsupported action...')\n  }\n}\n\nconst CollaborateModal = ({ projectId }) => {\n\n  const  navigate = useNavigate() \n\n  const [state, dispatch] = React.useReducer(modalReducer, {\n    open: false,\n    size: undefined,\n  })\n  const { open, size } = state\n\n  const [collabNotes, setCollabNotes] = useState('');\n  const [addCollaborator, { error }] = useMutation(ADD_COLLABORATOR, {\n\n    update(cache, {data: {addCollaborator}}){\n      try {\n        const {collaboratorInfo} = cache.readQuery({query: QUERY_SINGLE_PROJECT});\n        \n        cache.writeQuery({\n          query: QUERY_SINGLE_PROJECT,\n          data: {collaboratorInfo: [addCollaborator, ...collaboratorInfo]}\n        })\n      } catch (err){\n        console.log(error)\n      }\n    }\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n   \n    console.log('adding collaborator')\n    try {\n      console.log({\n        projectId,\n        collabNotes,\n      })\n      const { data } = await addCollaborator({\n        variables: {\n          projectId,\n          collabNotes,\n        }\n      });\n\n      setCollabNotes('');\n\n      navigate(0)\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'collabNotes') {\n      setCollabNotes(value);\n    }\n  };\n\n  return (\n    <>\n      <Button className=\"ui button\" onClick={() => dispatch({ type: 'open', size: 'tiny' })}>\n        Collaborate\n      </Button>\n\n      <Modal\n        as={Form} onSubmit={handleFormSubmit}\n        size={size}\n        open={open}\n        onClose={() => dispatch({ type: 'close' })}\n      >\n        <Modal.Header>Collaborate on this project</Modal.Header>\n        \n        <Modal.Content>\n            <textarea\n                name='collabNotes' id='collabNotes' value={collabNotes} type='text'\n                label='What will you contribute to this project?' required\n                placeholder='Include what languages and technologies you will use'\n                className='' onChange={handleChange}\n            />\n        </Modal.Content>\n\n        <Modal.Actions>\n          <Button negative onClick={() => dispatch({ type: 'close' })}>\n            Cancel\n          </Button>\n          <Button type='submit' >\n            Send\n          </Button>\n        </Modal.Actions>\n      </Modal>      \n    </>\n  )\n}\n\nexport default CollaborateModal;",{"ruleId":"112","severity":1,"message":"113","line":4,"column":8,"nodeType":"114","messageId":"115","endLine":4,"endColumn":18},{"ruleId":"112","severity":1,"message":"116","line":5,"column":8,"nodeType":"114","messageId":"115","endLine":5,"endColumn":15},{"ruleId":"112","severity":1,"message":"117","line":40,"column":15,"nodeType":"114","messageId":"115","endLine":40,"endColumn":19},{"ruleId":"112","severity":1,"message":"118","line":6,"column":8,"nodeType":"114","messageId":"115","endLine":6,"endColumn":19},{"ruleId":"112","severity":1,"message":"119","line":9,"column":10,"nodeType":"114","messageId":"115","endLine":9,"endColumn":14},{"ruleId":"112","severity":1,"message":"120","line":9,"column":16,"nodeType":"114","messageId":"115","endLine":9,"endColumn":21},{"ruleId":"112","severity":1,"message":"121","line":9,"column":23,"nodeType":"114","messageId":"115","endLine":9,"endColumn":27},{"ruleId":"112","severity":1,"message":"122","line":12,"column":9,"nodeType":"114","messageId":"115","endLine":12,"endColumn":17},{"ruleId":"112","severity":1,"message":"123","line":20,"column":9,"nodeType":"114","messageId":"115","endLine":20,"endColumn":28},{"ruleId":"112","severity":1,"message":"124","line":14,"column":10,"nodeType":"114","messageId":"115","endLine":14,"endColumn":18},{"ruleId":"112","severity":1,"message":"125","line":15,"column":10,"nodeType":"114","messageId":"115","endLine":15,"endColumn":19},{"ruleId":"112","severity":1,"message":"126","line":18,"column":20,"nodeType":"114","messageId":"115","endLine":18,"endColumn":25},{"ruleId":"112","severity":1,"message":"117","line":50,"column":14,"nodeType":"114","messageId":"115","endLine":50,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":67,"column":8,"nodeType":"129","messageId":"130","endLine":67,"endColumn":19},{"ruleId":"112","severity":1,"message":"131","line":67,"column":8,"nodeType":"114","messageId":"115","endLine":67,"endColumn":12},{"ruleId":"132","severity":1,"message":"133","line":37,"column":1,"nodeType":"134","endLine":37,"endColumn":34},{"ruleId":"112","severity":1,"message":"119","line":3,"column":24,"nodeType":"114","messageId":"115","endLine":3,"endColumn":28},{"ruleId":"112","severity":1,"message":"126","line":30,"column":24,"nodeType":"114","messageId":"115","endLine":30,"endColumn":29},{"ruleId":"112","severity":1,"message":"117","line":37,"column":14,"nodeType":"114","messageId":"115","endLine":37,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":55,"column":8,"nodeType":"129","messageId":"130","endLine":55,"endColumn":23},{"ruleId":"112","severity":1,"message":"131","line":55,"column":8,"nodeType":"114","messageId":"115","endLine":55,"endColumn":12},{"ruleId":"112","severity":1,"message":"117","line":58,"column":15,"nodeType":"114","messageId":"115","endLine":58,"endColumn":19},"no-unused-vars","'background' is defined but never used.","Identifier","unusedVar","'AboutUs' is defined but never used.","'data' is assigned a value but never used.","'NavDropdown' is defined but never used.","'Icon' is defined but never used.","'Image' is defined but never used.","'Menu' is defined but never used.","'navigate' is assigned a value but never used.","'handleSidebarToggle' is assigned a value but never used.","'Progress' is defined but never used.","'Dummydata' is defined but never used.","'error' is assigned a value but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'name' is assigned a value but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration"]